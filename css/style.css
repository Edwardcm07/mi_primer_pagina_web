:root {
    --blanco: #ffffff;
    --oscuro: #212121;
    --primario: #ffc107;
    --secundario: #0097a7;
    --gris:#757575;/* pilas!!! no olvidar los ;*/
}

/* globales */

html{
    font-size: 62.5%;
    box-sizing: border-box;
    scroll-snap-type: y mandatory;
}

*, *:before, *:after {
    box-sizing: inherit;
}


body{
    font-size: 16px; /* 1 rem = 10px si agregamos al inicio del css la linea de html y de body*/
    font-family:'Krub', sans-serif;
    /* la siguiente linea de codigo se usa para el degradado de fondos */
    background-image:linear-gradient(to top, #DFE9F3 0%, var(--blanco) 100%);
}

.contenedor{
    max-width: 120rem;
    
    /* margin-top: 0;
    margin-right: auto;
    margin-bottom: 0;
    margin-left: auto; */

    /* Con la siguiente linea de codigo, se evita escribir los "margin" por cada lado y todo se acomoda a una sola linea */

    margin: 0 auto 0 auto;
}

.boton{
    background-color: var(--secundario);
    color:var(--blanco) ;
    padding: 1rem 3rem;
    margin-top: 1rem;
    font-size: 2rem;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: bold;
    border-radius: .5rem;
    width: 90%;
    text-align: center;
    border: none;
}

@media(min-width:768px){
    .boton{
        width: auto;
    }
}

.boton:hover{
    cursor: pointer;
}

.sombra{
    -webkit-box-shadow: 0px 5px 20px -9px rgba(54,54,54,0.9);
    -moz-box-shadow: 0px 5px 20px -9px rgba(54,54,54,0.9);
    box-shadow: 0px 5px 20px -9px rgba(54,54,54,0.9);
    background-color: var(--blanco);
    padding: 2rem;
    margin-bottom: 2rem;
    border-radius: 1rem;
}

/* tipografia*/

h1{
    font-size: 3.8rem;
    
}

h2{
    font-size: 2.8rem;
    
}

h3{
    font-size: 1.8rem;

}

h1,h2,h3{
    text-align: center;
}

/* inicialmente se hizo esta etiqueta titulo para desarrollar ejemplos pero por buenas practicas pra mejor entendimiento del codigo de una vez le da estilos a los h1,h2,h3 y no los tiene que etiquetar cada vez que los necesite si no que los define de una vez.

.title{
    text-align: center;
    font-size: 3.8rem;
     color:var(--primario); 
}*/

/*Titulos*/
.title span{
    font-size: 2rem;
}

/*utilidades*/
.w-sm-100{
    width: 100%;
}

@media (min-width: 768px){
    .w-sm-100{
        width: auto;
        margin-top: 1rem;
    }
}

.flex{
    display: flex;
}

.derecha{
    justify-content: flex-end;
}
/*Navegacion*/



.nav-bg{
    background-color: var(--secundario);
}
    /* pilas con la primera clase es la que toma todo el elemento */
.navegacion_principal{
    /* padding: 1rem; */
    display: flex;
    flex-direction: column;
     /* la propiedad que sigue es la que permite que el menu se espacie bien y dependiendo de la opcion que elija funciona. 
    
    space-between: lleva los enlaces a las esquinas y luego se separa proporcionalmente.
    
    space-arround: lo que hace es que todo el contenido en el div se separe proporcionalmente entonces todos tiene la misma distancia.

    space-evenly: es que trata de proporcionar cada distancia (necesito mas ejemplos de esto para entenderlo)  */
    
}
/* @media (min-width: 480px) es un telefono
@media (min-width: 768px) es una tablet
@media (min-width: 1140px o 1400px) es una pc */


@media (min-width:768px){
    .navegacion_principal{
        flex-direction: row;
        justify-content: space-between;
    }

}
    /* en esta clase se le asigna solo a los enlaces por eso la a */
    /* esto es un tipo de técnica, se muestra la clase padre y luego se identifica cada elemento es un estilo llamado "Metodo" es diferente al que vi con Perdo picapiedra que usa el metodo BEM que describe cada uno de los elementos que vas teniendo, en primera me gusta mas la de los modulos, falta esperar*/
.navegacion_principal a{
    color: var(--blanco);
    text-decoration: none; 
    font-size: 2rem;
    font-weight:700;  
    padding: 1rem; 

}

.navegacion_principal a:hover{
    background-color: var(--primario);
    color: var(--oscuro);
}

.hero{
    /*Estas son unas propiedades nuevas que no vi en otro curso de CSS son las propiedades de imagenes con background la primera es como importar la imagen (../), pilas! con los dos puntos al principio, la repeat es para la repeticion cuando se estira la pagina en este caso no-repeat, otra es size y cover es para que cubra el ancho de la pagina */
    background-image: url(../asset/images/head.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    height: 450px;
    position: relative;/* para la siguiente clase es necesario que exista esta linea*/
}

.contenido-hero{
    position: absolute;
    background-color: rgba(0,0,0,0.6);/*sisntaxis anterior*/
    background-color: rgb(0 0 0/70%);/*sisntaxis nueva no soportada*/
    width: 100%;
    height: 100%;

    /*El siguiente codigo es para alinear tanto verticalmente como horizontalmente el contenido todo el codigo es el que se aplica, es bueno memorizarlo pues se usará mucho. Esta en un div =hijo, en el padre que es el section siempre debe ir position: relative; */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

}

.contenido-hero h2,
.contenido-hero p {
    color: var(--blanco);
}

.ubicacion{
    display: flex;
    align-items: flex-end;
}

/*Servicios*/

.servicios, 
.navegacion_principal,
.formulario{
    scroll-snap-align: center;
    scroll-snap-stop: always;
    
}

@media (min-width:768px){
    .servicios{

        display:grid;
    
        grid-template-columns: 1fr 1fr 1fr;

        /* el grid es como si fuera una tabla (repasar lo de tablas) pero de una forma en mi opinion mas facil, las sintaxis siguiente es como se puede nombrar incluyendo la primera que aparece. 
        
        mirar cuando se usa flexbox y cuando grid....
        
        grid-template-columns: repeat(3,1fr);
        grid-template-columns: 33.3% 33.3% 33.3%;
        grid-template-columns: 300px 300px;
        grid-template-rows: 200px 800px;
        grid: 200px 800px/300px 300px;*/

        column-gap: 2rem;/*esta es la separacion entre columnas*/
    
    }

}

.servicio{
    display: flex;
    flex-direction: column;
    align-items: center;
}

.servicio h3{
    color: var(--secundario);
    font-weight: normal;
}

.servicio p{
    line-height: 2;
    text-align: center;

}

.servicio .iconos{
    height: 15rem;
    width: 15rem;
    background-color: var(--primario) ;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    
}

/*Contacto*/
.formulario{
    background-color: var(--gris);
    width: min(60rem, 100%);/*utiliza el valor mas pequeño*/
    margin: 0 auto;
    padding: 2rem;
    border-radius: 1rem;
}

.formulario fieldset{
  border: none; 
}
.formulario legend{
    text-align: center;
    font-size:1.8rem;
    text-transform: uppercase;
    font-weight: 700;
    margin-bottom: 2rem;
    color: var(--primario);
}

@media (min-width:768px){
    
    .contenedor-campos{
        display: grid;
        grid-template-columns: 1fr 1fr;
        grid-template-rows: auto auto 20rem;
        column-gap: 1rem;
    }
}
 
.campo:nth-child(3),
.campo:nth-child(4)
{
    grid-column: 1/3;
}

.campo{
    margin-bottom: 1rem;
}

.campo label{   
    color: var(--blanco);
    font-weight: bold;
    margin-bottom: .5rem;
    display: block;
}
.campo textarea{
    height: 15rem;
}
.input-text{
    width: 100%;
    border: none;
    padding: 1.5rem;
    border-radius:.5rem;
    
}

/*footer*/
.footer{
    text-align: center;
}

